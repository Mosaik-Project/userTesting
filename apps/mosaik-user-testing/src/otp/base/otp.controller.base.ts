/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import * as common from "@nestjs/common";
import * as swagger from "@nestjs/swagger";
import { isRecordNotFoundError } from "../../prisma.util";
import * as errors from "../../errors";
import { Request } from "express";
import { plainToClass } from "class-transformer";
import { ApiNestedQuery } from "../../decorators/api-nested-query.decorator";
import * as nestAccessControl from "nest-access-control";
import * as defaultAuthGuard from "../../auth/defaultAuth.guard";
import { OtpService } from "../otp.service";
import { Public } from "../../decorators/public.decorator";
import { AclFilterResponseInterceptor } from "../../interceptors/aclFilterResponse.interceptor";
import { AclValidateRequestInterceptor } from "../../interceptors/aclValidateRequest.interceptor";
import { OtpCreateInput } from "./OtpCreateInput";
import { Otp } from "./Otp";
import { OtpFindManyArgs } from "./OtpFindManyArgs";
import { OtpWhereUniqueInput } from "./OtpWhereUniqueInput";
import { OtpUpdateInput } from "./OtpUpdateInput";
import { VerifyPhoneOtpInput } from "../VerifyPhoneOtpInput";
import { GenerateEmailOtpInput } from "../GenerateEmailOtpInput";
import { GeneratePhoneOtpInput } from "../GeneratePhoneOtpInput";
import { VerifyEmailOtpInput } from "../VerifyEmailOtpInput";

@swagger.ApiBearerAuth()
@common.UseGuards(defaultAuthGuard.DefaultAuthGuard, nestAccessControl.ACGuard)
export class OtpControllerBase {
  constructor(
    protected readonly service: OtpService,
    protected readonly rolesBuilder: nestAccessControl.RolesBuilder
  ) {}

 
  @Public()
  @common.Post("/generate-email-otp")
  @swagger.ApiCreatedResponse({ type: Otp })
  @swagger.ApiNotFoundResponse({
    type: errors.NotFoundException,
  })
  @swagger.ApiForbiddenResponse({
    type: errors.ForbiddenException,
  })
  async GenerateEmailOtp(
    @common.Body()
    body: GenerateEmailOtpInput
  ): Promise<{ otp: string }> {
    return this.service.GenerateEmailOtp(body);
  }
  @Public()
  @common.Post("/generate-phone-otp")
  @swagger.ApiCreatedResponse({ type: Otp })

  @swagger.ApiNotFoundResponse({
    type: errors.NotFoundException,
  })
  @swagger.ApiForbiddenResponse({
    type: errors.ForbiddenException,
  })
  async GeneratePhoneOtp(
    @common.Body()
    body: GeneratePhoneOtpInput
  ): Promise<string> {
    return this.service.GeneratePhoneOtp(body);
  }
  @Public()
  @common.Post("/update-otp")
  @swagger.ApiOkResponse({
    type: Otp,
  })
  @swagger.ApiNotFoundResponse({
    type: errors.NotFoundException,
  })
  @swagger.ApiForbiddenResponse({
    type: errors.ForbiddenException,
  })
  async UpdateOtp(
    @common.Body()
    body: VerifyPhoneOtpInput
  ): Promise<Otp> {
    return this.service.UpdateOtp(body);
  }
  @Public()
  @common.Post("/verify-email-otp")
  @swagger.ApiOkResponse({
    type: Boolean,
  })
  @swagger.ApiNotFoundResponse({
    type: errors.NotFoundException,
  })
  @swagger.ApiForbiddenResponse({
    type: errors.ForbiddenException,
  })
  async VerifyEmailOtp(
    @common.Body()
    body: VerifyEmailOtpInput
  ): Promise<boolean> {
    return this.service.VerifyEmailOtp(body);
  }
  
  @Public()
  @common.Post("/verify-phone-otp")
  @swagger.ApiOkResponse({
    type: Boolean,
  })
  @swagger.ApiNotFoundResponse({
    type: errors.NotFoundException,
  })
  @swagger.ApiForbiddenResponse({
    type: errors.ForbiddenException,
  })
  async VerifyPhoneOtp(
    @common.Body()
    body: VerifyPhoneOtpInput
  ): Promise<boolean> {
    return this.service.VerifyPhoneOtp(body);
  }
}
